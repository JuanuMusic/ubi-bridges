{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "bridgeAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "bridgeFlow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "bridgeAmount(uint256,uint256,bytes)": "cf2febd0",
    "bridgeFlow(uint256,uint256,bytes)": "d80dc6d0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"bridgeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"bridgeFlow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"bridgeAmount(uint256,uint256,bytes)\":{\"details\":\"Bridges an amount from origin chain to the chain corresponding to the given chain ID.\",\"params\":{\"amount\":\"the amount of tokens to bridge.\",\"chainId\":\"the destination chain ID, specially in case same bridge can handle more than one.\",\"data\":\"arbitrary data that might be required by the bridge implementation.\"}},\"bridgeFlow(uint256,uint256,bytes)\":{\"details\":\"Bridges a flow from origin chain to the chain corresponding to the given chain ID.\",\"params\":{\"chainId\":\"the destination chain ID, specially in case same bridge can handle more than one.\",\"data\":\"arbitrary data that might be required by the bridge implementation.\",\"tokenId\":\"the token ID of the flow NFT.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBridge.sol\":\"IBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/interfaces/IBridge.sol\":{\"keccak256\":\"0xba11a99836d0f63a88391048fe1997c09389edd72de440f871a91a5ae7cfa7f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89df3c39e2448040de525a85f1137ad93380ec91e4c6285d2cf16cce36040a2\",\"dweb:/ipfs/QmXob8rHtpmKKRoUvqrfMRdcT7k1peESY1S2okpkK5Ea5Q\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeAmount"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeFlow"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "bridgeAmount(uint256,uint256,bytes)": {
            "details": "Bridges an amount from origin chain to the chain corresponding to the given chain ID.",
            "params": {
              "amount": "the amount of tokens to bridge.",
              "chainId": "the destination chain ID, specially in case same bridge can handle more than one.",
              "data": "arbitrary data that might be required by the bridge implementation."
            }
          },
          "bridgeFlow(uint256,uint256,bytes)": {
            "details": "Bridges a flow from origin chain to the chain corresponding to the given chain ID.",
            "params": {
              "chainId": "the destination chain ID, specially in case same bridge can handle more than one.",
              "data": "arbitrary data that might be required by the bridge implementation.",
              "tokenId": "the token ID of the flow NFT."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@maticnetwork/=node_modules/@maticnetwork/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/interfaces/IBridge.sol": "IBridge"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IBridge.sol": {
        "keccak256": "0xba11a99836d0f63a88391048fe1997c09389edd72de440f871a91a5ae7cfa7f7",
        "urls": [
          "bzz-raw://a89df3c39e2448040de525a85f1137ad93380ec91e4c6285d2cf16cce36040a2",
          "dweb:/ipfs/QmXob8rHtpmKKRoUvqrfMRdcT7k1peESY1S2okpkK5Ea5Q"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/interfaces/IBridge.sol",
    "id": 344,
    "exportedSymbols": {
      "IBridge": [
        343
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1026:1",
    "nodes": [
      {
        "id": 322,
        "nodeType": "PragmaDirective",
        "src": "32:23:1",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 343,
        "nodeType": "ContractDefinition",
        "src": "59:997:1",
        "nodes": [
          {
            "id": 332,
            "nodeType": "FunctionDefinition",
            "src": "448:119:1",
            "documentation": {
              "id": 323,
              "nodeType": "StructuredDocumentation",
              "src": "84:358:1",
              "text": " @dev Bridges an amount from origin chain to the chain corresponding to the given chain ID.\n @param chainId the destination chain ID, specially in case same bridge can handle more than one.\n @param amount the amount of tokens to bridge.\n @param data arbitrary data that might be required by the bridge implementation."
            },
            "functionSelector": "cf2febd0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "bridgeAmount",
            "nameLocation": "457:12:1",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "488:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "480:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "514:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "506:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "546:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "531:19:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "469:88:1"
            },
            "returnParameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:0:1"
            },
            "scope": 343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 342,
            "nodeType": "FunctionDefinition",
            "src": "935:118:1",
            "documentation": {
              "id": 333,
              "nodeType": "StructuredDocumentation",
              "src": "575:354:1",
              "text": " @dev Bridges a flow from origin chain to the chain corresponding to the given chain ID.\n @param chainId the destination chain ID, specially in case same bridge can handle more than one.\n @param tokenId the token ID of the flow NFT.\n @param data arbitrary data that might be required by the bridge implementation."
            },
            "functionSelector": "d80dc6d0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "bridgeFlow",
            "nameLocation": "944:10:1",
            "parameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 335,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "973:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "965:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "999:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "991:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 339,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1032:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "1017:19:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 338,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1017:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:89:1"
            },
            "returnParameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1052:0:1"
            },
            "scope": 343,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IBridge",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          343
        ],
        "name": "IBridge",
        "nameLocation": "69:7:1",
        "scope": 344,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 1
}