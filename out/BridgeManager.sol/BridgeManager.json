{
  "abi": [
    {
      "inputs": [],
      "name": "InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyGovernance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyUBI",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedChain",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedNft",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bridge",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "AmountBridged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bridge",
          "type": "address"
        }
      ],
      "name": "BridgeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bridge",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "FlowBridged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldGovernance",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernance",
          "type": "address"
        }
      ],
      "name": "GovernanceTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "UBI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "bridgeAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bridgeByChainId",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "bridgeFlow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fUBI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_UBI",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_fUBI",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "setBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newGovernance",
          "type": "address"
        }
      ],
      "name": "transferGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "2059:5568:0:-:0;;;1088:4:20;1045:48;;2059:5568:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "2059:5568:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5463:496;;;;;;;;;;-1:-1:-1;5463:496:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1337:33:31;;;1319:52;;1307:2;1292:18;5463:496:0;;;;;;;;1090:19;;;;;;;;;;-1:-1:-1;1090:19:0;;;;-1:-1:-1;;;;;1090:19:0;;;;;;-1:-1:-1;;;;;1546:32:31;;;1528:51;;1516:2;1501:18;1090:19:0;1382:203:31;3522:176:0;;;;;;;;;;-1:-1:-1;3522:176:0;;;;;:::i;:::-;;:::i;:::-;;3071:197:20;;;;;;;;;;-1:-1:-1;3071:197:20;;;;;:::i;:::-;;:::i;3517:222::-;;;;;;:::i;:::-;;:::i;2760:131::-;;;;;;;;;;;;;:::i;:::-;;;3440:25:31;;;3428:2;3413:18;2760:131:20;3294:177:31;222:25:8;;;;;;;;;;-1:-1:-1;222:25:8;;;;;;;-1:-1:-1;;;;;222:25:8;;;1065:18:0;;;;;;;;;;-1:-1:-1;1065:18:0;;;;-1:-1:-1;;;;;1065:18:0;;;3060:212;;;;;;;;;;-1:-1:-1;3060:212:0;;;;;:::i;:::-;;:::i;4068:395::-;;;;;;;;;;-1:-1:-1;4068:395:0;;;;;:::i;:::-;;:::i;559:187:8:-;;;;;;;;;;-1:-1:-1;559:187:8;;;;;:::i;:::-;;:::i;4829:252:0:-;;;;;;;;;;-1:-1:-1;4829:252:0;;;;;:::i;:::-;;:::i;1002:50::-;;;;;;;;;;-1:-1:-1;1002:50:0;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1002:50:0;;;5463:496;5678:4;;5641:6;;-1:-1:-1;;;;;5678:4:0;5664:10;:18;5660:244;;5700:15;;5744:35;;;;5755:5;5744:35;:::i;:::-;5699:80;;;;5794:42;5806:7;5815:8;5825:10;5794:11;:42::i;:::-;5684:164;;5660:244;;;5876:16;;-1:-1:-1;;;5876:16:0;;;;;;;;;;;5660:244;-1:-1:-1;;;;5463:496:0;;;;;;;:::o;3522:176::-;313:10:8;;;;;-1:-1:-1;;;;;313:10:8;299;:24;295:114;;3611:25:0::1;::::0;;;:15:::1;:25;::::0;;;;;;;;:35;;-1:-1:-1;;;;;;3611:35:0::1;-1:-1:-1::0;;;;;3611:35:0;::::1;::::0;;::::1;::::0;;;3662:28;;1528:51:31;;;3611:25:0;;3662:28:::1;::::0;1501:18:31;3662:28:0::1;;;;;;;3522:176:::0;;:::o;295:114:8:-;381:16;;-1:-1:-1;;;381:16:8;;;;;;;;;;;295:114;3522:176:0;;:::o;3071:197:20:-;-1:-1:-1;;;;;1654:6:20;1637:23;1645:4;1637:23;1629:80;;;;-1:-1:-1;;;1629:80:20;;;;;;;:::i;:::-;;;;;;;;;1751:6;-1:-1:-1;;;;;1727:30:20;:20;-1:-1:-1;;;;;;;;;;;1380:54:17;-1:-1:-1;;;;;1380:54:17;;1301:140;1727:20:20;-1:-1:-1;;;;;1727:30:20;;1719:87;;;;-1:-1:-1;;;1719:87:20;;;;;;;:::i;:::-;3154:36:::1;3172:17;3154;:36::i;:::-;3241:12;::::0;;3251:1:::1;3241:12:::0;;;::::1;::::0;::::1;::::0;;;3200:61:::1;::::0;3222:17;;3241:12;3200:21:::1;:61::i;:::-;3071:197:::0;:::o;3517:222::-;-1:-1:-1;;;;;1654:6:20;1637:23;1645:4;1637:23;1629:80;;;;-1:-1:-1;;;1629:80:20;;;;;;;:::i;:::-;1751:6;-1:-1:-1;;;;;1727:30:20;:20;-1:-1:-1;;;;;;;;;;;1380:54:17;-1:-1:-1;;;;;1380:54:17;;1301:140;1727:20:20;-1:-1:-1;;;;;1727:30:20;;1719:87;;;;-1:-1:-1;;;1719:87:20;;;;;;;:::i;:::-;3634:36:::1;3652:17;3634;:36::i;:::-;3680:52;3702:17;3721:4;3727;3680:21;:52::i;2760:131::-:0;2838:7;2080:4;-1:-1:-1;;;;;2089:6:20;2072:23;;2064:92;;;;-1:-1:-1;;;2064:92:20;;5971:2:31;2064:92:20;;;5953:21:31;6010:2;5990:18;;;5983:30;6049:34;6029:18;;;6022:62;6120:26;6100:18;;;6093:54;6164:19;;2064:92:20;5769:420:31;2064:92:20;-1:-1:-1;;;;;;;;;;;;2760:131:20;:::o;3060:212:0:-;3100:19:19;3122:25;3145:1;3122:22;:25::i;:::-;3100:47;;3161:14;3157:65;;;3191:13;:20;;-1:-1:-1;;3191:20:19;;;;;3157:65;3196:10:0::1;:24:::0;;-1:-1:-1;;;;;3196:24:0;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;3196:24:0;;::::1;::::0;;;::::1;::::0;;;:10:::1;3231::::0;;;;::::1;-1:-1:-1::0;;;;;;3231:10:0;;::::1;;::::0;;;3252:4:::1;:12:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3242:99:19;;;;3292:5;3276:21;;-1:-1:-1;;3276:21:19;;;3316:14;;-1:-1:-1;6346:36:31;;3316:14:19;;6334:2:31;6319:18;3316:14:19;;;;;;;3242:99;3090:257;3060:212:0;;;:::o;4068:395::-;4208:3;;4201:60;;-1:-1:-1;;;4201:60:0;;4226:10;4201:60;;;6633:34:31;4246:4:0;6683:18:31;;;6676:43;6735:18;;;6728:34;;;-1:-1:-1;;;;;4208:3:0;;;;4201:24;;6568:18:31;;4201:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4272:14;4289:38;4318:8;4289:28;:38::i;:::-;4338:54;;-1:-1:-1;;;4338:54:0;;4272:55;;-1:-1:-1;;;;;;4338:28:0;;;;;:54;;4367:8;;4377:7;;4386:5;;;;4338:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4440:7;4430:8;4422:6;-1:-1:-1;;;;;4408:47:0;;4449:5;;4408:47;;;;;;;:::i;:::-;;;;;;;;4190:273;4068:395;;;;:::o;559:187:8:-;313:10;;;;;-1:-1:-1;;;;;313:10:8;299;:24;295:114;;646:10:::1;:27:::0;;-1:-1:-1;;;;;;646:27:8::1;::::0;-1:-1:-1;;;;;646:27:8;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;689:49:::1;::::0;646:27;;711:10;;::::1;;::::0;689:49:::1;::::0;646:10;689:49:::1;3071:197:20::0;:::o;4829:252:0:-;4969:4;;4961:63;;-1:-1:-1;;;4961:63:0;;4988:10;4961:63;;;6633:34:31;5008:4:0;6683:18:31;;;6676:43;6735:18;;;6728:34;;;-1:-1:-1;;;;;4969:4:0;;;;4961:26;;6568:18:31;;4961:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5035:38;5047:8;5057;5067:5;;5035:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5035:11:0;;-1:-1:-1;;;5035:38:0:i;6469:320::-;6600:14;6617:38;6646:8;6617:28;:38::i;:::-;6666:53;;-1:-1:-1;;;6666:53:0;;6600:55;;-1:-1:-1;;;;;;6666:26:0;;;;;:53;;6693:8;;6703;;6713:5;;6666:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6765:8;6755;6747:6;-1:-1:-1;;;;;6735:46:0;;6775:5;6735:46;;;;;;:::i;:::-;;;;;;;;6589:200;6469:320;;;:::o;7534:90::-;313:10:8;;;;;-1:-1:-1;;;;;313:10:8;299;295:114;;;381:16;;-1:-1:-1;;;381:16:8;;;;;;;;;;;2650:952:17;689:66;3096:48;;;3092:504;;;3160:37;3179:17;3160:18;:37::i;:::-;2650:952;;;:::o;3092:504::-;3250:17;-1:-1:-1;;;;;3232:50:17;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3232:52:17;;;;;;;;-1:-1:-1;;3232:52:17;;;;;;;;;;;;:::i;:::-;;;3228:291;;3448:56;;-1:-1:-1;;;3448:56:17;;9473:2:31;3448:56:17;;;9455:21:31;9512:2;9492:18;;;9485:30;9551:34;9531:18;;;9524:62;-1:-1:-1;;;9602:18:31;;;9595:44;9656:19;;3448:56:17;9271:410:31;3228:291:17;-1:-1:-1;;;;;;;;;;;3334:28:17;;3326:82;;;;-1:-1:-1;;;3326:82:17;;9888:2:31;3326:82:17;;;9870:21:31;9927:2;9907:18;;;9900:30;9966:34;9946:18;;;9939:62;-1:-1:-1;;;10017:18:31;;;10010:39;10066:19;;3326:82:17;9686:405:31;3326:82:17;3285:138;3532:53;3550:17;3569:4;3575:9;3532:17;:53::i;5276:797:19:-;5340:4;5673:13;;;;;;;5669:398;;;5727:7;:12;;5738:1;5727:12;:50;;;;-1:-1:-1;5771:4:19;1465:19:27;:23;5727:50:19;5702:155;;;;-1:-1:-1;;;5702:155:19;;;;;;;:::i;:::-;-1:-1:-1;5878:5:19;;5276:797;-1:-1:-1;5276:797:19:o;5669:398::-;5922:12;;:22;;;;:12;;:22;5914:81;;;;-1:-1:-1;;;5914:81:19;;;;;;;:::i;:::-;-1:-1:-1;6009:12:19;:22;;-1:-1:-1;;6009:22:19;;;;;;;;;;;;-1:-1:-1;;5276:797:19:o;5669:398::-;5276:797;;;:::o;7059:261:0:-;7138:7;7175:25;;;:15;:25;;;;;;-1:-1:-1;;;;;7175:25:0;;7211:78;;7259:18;;-1:-1:-1;;;7259:18:0;;;;;;;;;;;7211:78;7306:6;7059:261;-1:-1:-1;;7059:261:0:o;1532:259:17:-;-1:-1:-1;;;;;1465:19:27;;;1605:95:17;;;;-1:-1:-1;;;1605:95:17;;10713:2:31;1605:95:17;;;10695:21:31;10752:2;10732:18;;;10725:30;10791:34;10771:18;;;10764:62;-1:-1:-1;;;10842:18:31;;;10835:43;10895:19;;1605:95:17;10511:409:31;1605:95:17;-1:-1:-1;;;;;;;;;;;1710:74:17;;-1:-1:-1;;;;;;1710:74:17;-1:-1:-1;;;;;1710:74:17;;;;;;;;;;1532:259::o;2183:295::-;2321:29;2332:17;2321:10;:29::i;:::-;2378:1;2364:4;:11;:15;:28;;;;2383:9;2364:28;2360:112;;;2408:53;2437:17;2456:4;2408:28;:53::i;1897:152::-;1963:37;1982:17;1963:18;:37::i;:::-;2015:27;;-1:-1:-1;;;;;2015:27:17;;;;;;;;1897:152;:::o;6570:198:27:-;6653:12;6684:77;6705:6;6713:4;6684:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6677:84;6570:198;-1:-1:-1;;;6570:198:27:o;6954:387::-;7095:12;-1:-1:-1;;;;;1465:19:27;;;7119:69;;;;-1:-1:-1;;;7119:69:27;;11127:2:31;7119:69:27;;;11109:21:31;11166:2;11146:18;;;11139:30;11205:34;11185:18;;;11178:62;-1:-1:-1;;;11256:18:31;;;11249:36;11302:19;;7119:69:27;10925:402:31;7119:69:27;7200:12;7214:23;7241:6;-1:-1:-1;;;;;7241:19:27;7261:4;7241:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7199:67;;;;7283:51;7300:7;7309:10;7321:12;7283:16;:51::i;:::-;7276:58;6954:387;-1:-1:-1;;;;;;6954:387:27:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:27;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:27;;;;;;;;:::i;14:173:31:-;82:20;;-1:-1:-1;;;;;131:31:31;;121:42;;111:70;;177:1;174;167:12;192:347;243:8;253:6;307:3;300:4;292:6;288:17;284:27;274:55;;325:1;322;315:12;274:55;-1:-1:-1;348:20:31;;391:18;380:30;;377:50;;;423:1;420;413:12;377:50;460:4;452:6;448:17;436:29;;512:3;505:4;496:6;488;484:19;480:30;477:39;474:59;;;529:1;526;519:12;474:59;192:347;;;;;:::o;544:626::-;641:6;649;657;665;673;726:3;714:9;705:7;701:23;697:33;694:53;;;743:1;740;733:12;694:53;766:29;785:9;766:29;:::i;:::-;756:39;;814:38;848:2;837:9;833:18;814:38;:::i;:::-;804:48;;899:2;888:9;884:18;871:32;861:42;;954:2;943:9;939:18;926:32;981:18;973:6;970:30;967:50;;;1013:1;1010;1003:12;967:50;1052:58;1102:7;1093:6;1082:9;1078:22;1052:58;:::i;:::-;544:626;;;;-1:-1:-1;544:626:31;;-1:-1:-1;1129:8:31;;1026:84;544:626;-1:-1:-1;;;544:626:31:o;1590:254::-;1658:6;1666;1719:2;1707:9;1698:7;1694:23;1690:32;1687:52;;;1735:1;1732;1725:12;1687:52;1771:9;1758:23;1748:33;;1800:38;1834:2;1823:9;1819:18;1800:38;:::i;:::-;1790:48;;1590:254;;;;;:::o;1849:186::-;1908:6;1961:2;1949:9;1940:7;1936:23;1932:32;1929:52;;;1977:1;1974;1967:12;1929:52;2000:29;2019:9;2000:29;:::i;2040:127::-;2101:10;2096:3;2092:20;2089:1;2082:31;2132:4;2129:1;2122:15;2156:4;2153:1;2146:15;2172:718;2214:5;2267:3;2260:4;2252:6;2248:17;2244:27;2234:55;;2285:1;2282;2275:12;2234:55;2321:6;2308:20;2347:18;2384:2;2380;2377:10;2374:36;;;2390:18;;:::i;:::-;2465:2;2459:9;2433:2;2519:13;;-1:-1:-1;;2515:22:31;;;2539:2;2511:31;2507:40;2495:53;;;2563:18;;;2583:22;;;2560:46;2557:72;;;2609:18;;:::i;:::-;2649:10;2645:2;2638:22;2684:2;2676:6;2669:18;2730:3;2723:4;2718:2;2710:6;2706:15;2702:26;2699:35;2696:55;;;2747:1;2744;2737:12;2696:55;2811:2;2804:4;2796:6;2792:17;2785:4;2777:6;2773:17;2760:54;2858:1;2851:4;2846:2;2838:6;2834:15;2830:26;2823:37;2878:6;2869:15;;;;;;2172:718;;;;:::o;2895:394::-;2972:6;2980;3033:2;3021:9;3012:7;3008:23;3004:32;3001:52;;;3049:1;3046;3039:12;3001:52;3072:29;3091:9;3072:29;:::i;:::-;3062:39;;3152:2;3141:9;3137:18;3124:32;3179:18;3171:6;3168:30;3165:50;;;3211:1;3208;3201:12;3165:50;3234:49;3275:7;3266:6;3255:9;3251:22;3234:49;:::i;:::-;3224:59;;;2895:394;;;;;:::o;3476:334::-;3553:6;3561;3569;3622:2;3610:9;3601:7;3597:23;3593:32;3590:52;;;3638:1;3635;3628:12;3590:52;3661:29;3680:9;3661:29;:::i;:::-;3651:39;;3709:38;3743:2;3732:9;3728:18;3709:38;:::i;:::-;3699:48;;3766:38;3800:2;3789:9;3785:18;3766:38;:::i;:::-;3756:48;;3476:334;;;;;:::o;3815:545::-;3903:6;3911;3919;3927;3980:2;3968:9;3959:7;3955:23;3951:32;3948:52;;;3996:1;3993;3986:12;3948:52;4032:9;4019:23;4009:33;;4089:2;4078:9;4074:18;4061:32;4051:42;;4144:2;4133:9;4129:18;4116:32;4171:18;4163:6;4160:30;4157:50;;;4203:1;4200;4193:12;4157:50;4242:58;4292:7;4283:6;4272:9;4268:22;4242:58;:::i;:::-;3815:545;;;;-1:-1:-1;4319:8:31;-1:-1:-1;;;;3815:545:31:o;4365:180::-;4424:6;4477:2;4465:9;4456:7;4452:23;4448:32;4445:52;;;4493:1;4490;4483:12;4445:52;-1:-1:-1;4516:23:31;;4365:180;-1:-1:-1;4365:180:31:o;4550:388::-;4627:6;4635;4688:2;4676:9;4667:7;4663:23;4659:32;4656:52;;;4704:1;4701;4694:12;4656:52;4740:9;4727:23;4717:33;;4801:2;4790:9;4786:18;4773:32;4828:18;4820:6;4817:30;4814:50;;;4860:1;4857;4850:12;4943:408;5145:2;5127:21;;;5184:2;5164:18;;;5157:30;5223:34;5218:2;5203:18;;5196:62;-1:-1:-1;;;5289:2:31;5274:18;;5267:42;5341:3;5326:19;;4943:408::o;5356:::-;5558:2;5540:21;;;5597:2;5577:18;;;5570:30;5636:34;5631:2;5616:18;;5609:62;-1:-1:-1;;;5702:2:31;5687:18;;5680:42;5754:3;5739:19;;5356:408::o;6773:277::-;6840:6;6893:2;6881:9;6872:7;6868:23;6864:32;6861:52;;;6909:1;6906;6899:12;6861:52;6941:9;6935:16;6994:5;6987:13;6980:21;6973:5;6970:32;6960:60;;7016:1;7013;7006:12;7055:266;7143:6;7138:3;7131:19;7195:6;7188:5;7181:4;7176:3;7172:14;7159:43;-1:-1:-1;7247:1:31;7222:16;;;7240:4;7218:27;;;7211:38;;;;7303:2;7282:15;;;-1:-1:-1;;7278:29:31;7269:39;;;7265:50;;7055:266::o;7326:386::-;7539:6;7528:9;7521:25;7582:6;7577:2;7566:9;7562:18;7555:34;7625:2;7620;7609:9;7605:18;7598:30;7502:4;7645:61;7702:2;7691:9;7687:18;7679:6;7671;7645:61;:::i;7717:244::-;7874:2;7863:9;7856:21;7837:4;7894:61;7951:2;7940:9;7936:18;7928:6;7920;7894:61;:::i;:::-;7886:69;7717:244;-1:-1:-1;;;;7717:244:31:o;7966:250::-;8051:1;8061:113;8075:6;8072:1;8069:13;8061:113;;;8151:11;;;8145:18;8132:11;;;8125:39;8097:2;8090:10;8061:113;;;-1:-1:-1;;8208:1:31;8190:16;;8183:27;7966:250::o;8221:270::-;8262:3;8300:5;8294:12;8327:6;8322:3;8315:19;8343:76;8412:6;8405:4;8400:3;8396:14;8389:4;8382:5;8378:16;8343:76;:::i;:::-;8473:2;8452:15;-1:-1:-1;;8448:29:31;8439:39;;;;8480:4;8435:50;;8221:270;-1:-1:-1;;8221:270:31:o;8496:359::-;8699:6;8688:9;8681:25;8742:6;8737:2;8726:9;8722:18;8715:34;8785:2;8780;8769:9;8765:18;8758:30;8662:4;8805:44;8845:2;8834:9;8830:18;8822:6;8805:44;:::i;:::-;8797:52;8496:359;-1:-1:-1;;;;;8496:359:31:o;8860:217::-;9007:2;8996:9;8989:21;8970:4;9027:44;9067:2;9056:9;9052:18;9044:6;9027:44;:::i;9082:184::-;9152:6;9205:2;9193:9;9184:7;9180:23;9176:32;9173:52;;;9221:1;9218;9211:12;9173:52;-1:-1:-1;9244:16:31;;9082:184;-1:-1:-1;9082:184:31:o;10096:410::-;10298:2;10280:21;;;10337:2;10317:18;;;10310:30;10376:34;10371:2;10356:18;;10349:62;-1:-1:-1;;;10442:2:31;10427:18;;10420:44;10496:3;10481:19;;10096:410::o;11332:287::-;11461:3;11499:6;11493:13;11515:66;11574:6;11569:3;11562:4;11554:6;11550:17;11515:66;:::i;:::-;11597:16;;;;;11332:287;-1:-1:-1;;11332:287:31:o",
    "linkReferences": {},
    "immutableReferences": {
      "4284": [
        {
          "start": 952,
          "length": 32
        },
        {
          "start": 1025,
          "length": 32
        },
        {
          "start": 1184,
          "length": 32
        },
        {
          "start": 1248,
          "length": 32
        },
        {
          "start": 1391,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "UBI()": "7e613d59",
    "bridgeAmount(uint256,uint256,bytes)": "cf2febd0",
    "bridgeByChainId(uint256)": "faf443fc",
    "bridgeFlow(uint256,uint256,bytes)": "d80dc6d0",
    "fUBI()": "2c19aed2",
    "governance()": "5aa6e675",
    "initialize(address,address,address)": "c0c53b8b",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "proxiableUUID()": "52d1902d",
    "setBridge(uint256,address)": "2e0ca474",
    "transferGovernance(address)": "d38bfff4",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyGovernance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUBI\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedChain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedNft\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bridge\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"AmountBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"BridgeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bridge\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"FlowBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldGovernance\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernance\",\"type\":\"address\"}],\"name\":\"GovernanceTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UBI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"bridgeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bridgeByChainId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"bridgeFlow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fUBI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_UBI\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fUBI\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"setBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGovernance\",\"type\":\"address\"}],\"name\":\"transferGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"bridgeAmount(uint256,uint256,bytes)\":{\"details\":\"Bridges an amount by routing the call to the corresponding bride implementation.\",\"params\":{\"_amount\":\"The amount of tokens to bridge.\",\"_chainId\":\"The destination chain ID, specially in case same bridge can handle more than one.\",\"_data\":\"Arbitrary data that might be required by the bridge implementation.\"}},\"bridgeFlow(uint256,uint256,bytes)\":{\"details\":\"Bridges a flow by routing the call to the corresponding bride implementation.\",\"params\":{\"_chainId\":\"The destination chain ID, specially in case same bridge can handle more than one.\",\"_data\":\"arbitrary data that might be required by the bridge implementation.\",\"_tokenId\":\"The token ID of the flow NFT.\"}},\"initialize(address,address,address)\":{\"details\":\"Contract initializer. For new `BridgeManager` versions replace `initializer` modifier by `reinitializer(v)` where `v` is the new version number of the contract. Read more about initializers at: https://blog.openzeppelin.com/the-state-of-smart-contract-upgrades/#implementation-contract-limitations\",\"params\":{\"_UBI\":\"The UBI ERC-20 address.\",\"_fUBI\":\"The fUBI ERC-721 address.\",\"_governance\":\"The governance address.\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Hook used to enable ERC-721 token bridging through transfers to this contract.\",\"params\":{\"_data\":\"Arbitrary data passed by the user. It should first contain the chain ID encoded, followed by any arbitrary data that might be required by the expected bridge implementation.\",\"_tokenId\":\"The ID of the bridged ERC-721 token.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"setBridge(uint256,address)\":{\"details\":\"Sets the bridge for the given chain ID.\",\"params\":{\"_bridge\":\"The bridge implementation address for given chain ID. Set as zero address for unsupported chains.\",\"_chainId\":\"The destination chain ID.\"}},\"transferGovernance(address)\":{\"details\":\"Transfers governance rights to a new address.\",\"params\":{\"_newGovernance\":\"The new governance address.\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bridgeByChainId(uint256)\":{\"notice\":\"WARNING: Only add storage fields appending them just before the `__gap`. Never change the order of them. Read about storage layout compatibility at https://blog.openzeppelin.com/the-state-of-smart-contract-upgrades/ and also at https://docs.openzeppelin.com/upgrades-plugins/1.x/writing-upgradeable#modifying-your-contracts.\"}},\"notice\":\"WARNING: If you add inheritance from contracts that have storage fields, make sure you do not brake storage layout compatibility. Always add new inheritance appending them at the end of current ones and do not re-order them. Add new non-inherited storage at `BridgeManagerStorage` following the rules documented there. Read about storage layout compatibility at https://blog.openzeppelin.com/the-state-of-smart-contract-upgrades/ and also at https://docs.openzeppelin.com/upgrades-plugins/1.x/writing-upgradeable#modifying-your-contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BridgeManager.sol\":\"BridgeManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/BridgeManager.sol\":{\"keccak256\":\"0x4f01d2694406945401ff62b017e2e60c76fc7b3f889a48ceed9054bda1244b2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9b11f0ae8f17357d2b0114526f605315ffc17bccfc6a22183f9c417f3c5f22\",\"dweb:/ipfs/QmQRde9hNt9aVNDMgSsQ1vaRToak2qRWuZhNumFiYRWrxD\"]},\"contracts/interfaces/IBridge.sol\":{\"keccak256\":\"0xba11a99836d0f63a88391048fe1997c09389edd72de440f871a91a5ae7cfa7f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89df3c39e2448040de525a85f1137ad93380ec91e4c6285d2cf16cce36040a2\",\"dweb:/ipfs/QmXob8rHtpmKKRoUvqrfMRdcT7k1peESY1S2okpkK5Ea5Q\"]},\"contracts/security/Governable.sol\":{\"keccak256\":\"0xece850571a493358bb696c0f0831154d45d018a8fa14a91854f38be0363f3638\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4af6bd9b86ff6181a2401192b83a9ce61a858872b03cbb9c71f8046dd8ea2c43\",\"dweb:/ipfs/QmaaDkVGyKGHgyWxa6maLcEr2LcymFhaV6cMU3Q6QpYrmM\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xb68c2016cd41840646addd6f79f17f80f42a6279acb0cd4d9d85cab6e8d9b777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb7967120ec6c32374a68640c80fb5d70362e91945690997c6c11d1719957dc2\",\"dweb:/ipfs/QmSc81UBz225LVWx5c1V5cvioVrGdDFXV6jeDyB9wHWTUQ\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x20ba3c551439998a53313a63959be77ab70f14338a39592c7a6eb36e8bc3d148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b4ad713900e1f3f43788b00742e0c1a885c254decf8fb8d854f4769401239cd\",\"dweb:/ipfs/QmatiW29TqVMi4dgfHM2Uppn4LqsSeJZtnVvT2rrYqyjR2\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbaba7fe0fe556cc5ed291e03d271fd27d395250141ecfb57a4b30d528958ff9\",\"dweb:/ipfs/QmWT653X2DyZo8nqEcmFe3yTkrCJv3ptbZLhbgLU3y6abe\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyGovernance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUBI"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedChain"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedNft"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "bridge",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AmountBridged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bridge",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BridgeSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "bridge",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlowBridged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldGovernance",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newGovernance",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "GovernanceTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UBI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_chainId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeAmount"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "bridgeByChainId",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_chainId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeFlow"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fUBI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "governance",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_governance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_UBI",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_fUBI",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_bridge",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBridge"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newGovernance",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferGovernance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "bridgeAmount(uint256,uint256,bytes)": {
            "details": "Bridges an amount by routing the call to the corresponding bride implementation.",
            "params": {
              "_amount": "The amount of tokens to bridge.",
              "_chainId": "The destination chain ID, specially in case same bridge can handle more than one.",
              "_data": "Arbitrary data that might be required by the bridge implementation."
            }
          },
          "bridgeFlow(uint256,uint256,bytes)": {
            "details": "Bridges a flow by routing the call to the corresponding bride implementation.",
            "params": {
              "_chainId": "The destination chain ID, specially in case same bridge can handle more than one.",
              "_data": "arbitrary data that might be required by the bridge implementation.",
              "_tokenId": "The token ID of the flow NFT."
            }
          },
          "initialize(address,address,address)": {
            "details": "Contract initializer. For new `BridgeManager` versions replace `initializer` modifier by `reinitializer(v)` where `v` is the new version number of the contract. Read more about initializers at: https://blog.openzeppelin.com/the-state-of-smart-contract-upgrades/#implementation-contract-limitations",
            "params": {
              "_UBI": "The UBI ERC-20 address.",
              "_fUBI": "The fUBI ERC-721 address.",
              "_governance": "The governance address."
            }
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "Hook used to enable ERC-721 token bridging through transfers to this contract.",
            "params": {
              "_data": "Arbitrary data passed by the user. It should first contain the chain ID encoded, followed by any arbitrary data that might be required by the expected bridge implementation.",
              "_tokenId": "The ID of the bridged ERC-721 token."
            }
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "setBridge(uint256,address)": {
            "details": "Sets the bridge for the given chain ID.",
            "params": {
              "_bridge": "The bridge implementation address for given chain ID. Set as zero address for unsupported chains.",
              "_chainId": "The destination chain ID."
            }
          },
          "transferGovernance(address)": {
            "details": "Transfers governance rights to a new address.",
            "params": {
              "_newGovernance": "The new governance address."
            }
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "bridgeByChainId(uint256)": {
            "notice": "WARNING: Only add storage fields appending them just before the `__gap`. Never change the order of them. Read about storage layout compatibility at https://blog.openzeppelin.com/the-state-of-smart-contract-upgrades/ and also at https://docs.openzeppelin.com/upgrades-plugins/1.x/writing-upgradeable#modifying-your-contracts."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@maticnetwork/=node_modules/@maticnetwork/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/BridgeManager.sol": "BridgeManager"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/BridgeManager.sol": {
        "keccak256": "0x4f01d2694406945401ff62b017e2e60c76fc7b3f889a48ceed9054bda1244b2a",
        "urls": [
          "bzz-raw://8f9b11f0ae8f17357d2b0114526f605315ffc17bccfc6a22183f9c417f3c5f22",
          "dweb:/ipfs/QmQRde9hNt9aVNDMgSsQ1vaRToak2qRWuZhNumFiYRWrxD"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IBridge.sol": {
        "keccak256": "0xba11a99836d0f63a88391048fe1997c09389edd72de440f871a91a5ae7cfa7f7",
        "urls": [
          "bzz-raw://a89df3c39e2448040de525a85f1137ad93380ec91e4c6285d2cf16cce36040a2",
          "dweb:/ipfs/QmXob8rHtpmKKRoUvqrfMRdcT7k1peESY1S2okpkK5Ea5Q"
        ],
        "license": "MIT"
      },
      "contracts/security/Governable.sol": {
        "keccak256": "0xece850571a493358bb696c0f0831154d45d018a8fa14a91854f38be0363f3638",
        "urls": [
          "bzz-raw://4af6bd9b86ff6181a2401192b83a9ce61a858872b03cbb9c71f8046dd8ea2c43",
          "dweb:/ipfs/QmaaDkVGyKGHgyWxa6maLcEr2LcymFhaV6cMU3Q6QpYrmM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a",
        "urls": [
          "bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8",
          "dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xb68c2016cd41840646addd6f79f17f80f42a6279acb0cd4d9d85cab6e8d9b777",
        "urls": [
          "bzz-raw://fb7967120ec6c32374a68640c80fb5d70362e91945690997c6c11d1719957dc2",
          "dweb:/ipfs/QmSc81UBz225LVWx5c1V5cvioVrGdDFXV6jeDyB9wHWTUQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x20ba3c551439998a53313a63959be77ab70f14338a39592c7a6eb36e8bc3d148",
        "urls": [
          "bzz-raw://2b4ad713900e1f3f43788b00742e0c1a885c254decf8fb8d854f4769401239cd",
          "dweb:/ipfs/QmatiW29TqVMi4dgfHM2Uppn4LqsSeJZtnVvT2rrYqyjR2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba",
        "urls": [
          "bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0",
          "dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca",
        "urls": [
          "bzz-raw://dbaba7fe0fe556cc5ed291e03d271fd27d395250141ecfb57a4b30d528958ff9",
          "dweb:/ipfs/QmWT653X2DyZo8nqEcmFe3yTkrCJv3ptbZLhbgLU3y6abe"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/BridgeManager.sol",
    "id": 321,
    "exportedSymbols": {
      "BridgeManager": [
        320
      ],
      "BridgeManagerStorage": [
        30
      ],
      "Governable": [
        1294
      ],
      "IBridge": [
        343
      ],
      "IERC20": [
        5088
      ],
      "IERC721": [
        5229
      ],
      "IERC721Receiver": [
        5247
      ],
      "Initializable": [
        4268
      ],
      "UUPSUpgradeable": [
        4384
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:7597:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:23:0",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "59:49:0",
        "absolutePath": "contracts/interfaces/IBridge.sol",
        "file": "./interfaces/IBridge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 321,
        "sourceUnit": 344,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IBridge",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 343,
              "src": "67:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "110:70:0",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 321,
        "sourceUnit": 5089,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5088,
              "src": "118:6:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7,
        "nodeType": "ImportDirective",
        "src": "182:73:0",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 321,
        "sourceUnit": 5230,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5229,
              "src": "190:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9,
        "nodeType": "ImportDirective",
        "src": "257:89:0",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 321,
        "sourceUnit": 5248,
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "IERC721Receiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5247,
              "src": "265:15:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11,
        "nodeType": "ImportDirective",
        "src": "348:84:0",
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 321,
        "sourceUnit": 4269,
        "symbolAliases": [
          {
            "foreign": {
              "id": 10,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4268,
              "src": "356:13:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13,
        "nodeType": "ImportDirective",
        "src": "434:88:0",
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 321,
        "sourceUnit": 4385,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4384,
              "src": "442:15:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 15,
        "nodeType": "ImportDirective",
        "src": "524:53:0",
        "absolutePath": "contracts/security/Governable.sol",
        "file": "./security/Governable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 321,
        "sourceUnit": 1295,
        "symbolAliases": [
          {
            "foreign": {
              "id": 14,
              "name": "Governable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1294,
              "src": "532:10:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30,
        "nodeType": "ContractDefinition",
        "src": "581:901:0",
        "nodes": [
          {
            "id": 20,
            "nodeType": "VariableDeclaration",
            "src": "1002:50:0",
            "constant": false,
            "documentation": {
              "id": 16,
              "nodeType": "StructuredDocumentation",
              "src": "627:369:0",
              "text": " WARNING: Only add storage fields appending them just before the `__gap`. Never change the order of them.\n Read about storage layout compatibility at https://blog.openzeppelin.com/the-state-of-smart-contract-upgrades/\n and also at https://docs.openzeppelin.com/upgrades-plugins/1.x/writing-upgradeable#modifying-your-contracts."
            },
            "functionSelector": "faf443fc",
            "mutability": "mutable",
            "name": "bridgeByChainId",
            "nameLocation": "1037:15:0",
            "scope": 30,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 17,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1010:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1002:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1021:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 22,
            "nodeType": "VariableDeclaration",
            "src": "1065:18:0",
            "constant": false,
            "functionSelector": "7e613d59",
            "mutability": "mutable",
            "name": "UBI",
            "nameLocation": "1080:3:0",
            "scope": 30,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1065:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24,
            "nodeType": "VariableDeclaration",
            "src": "1090:19:0",
            "constant": false,
            "functionSelector": "2c19aed2",
            "mutability": "mutable",
            "name": "fUBI",
            "nameLocation": "1105:4:0",
            "scope": 30,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1090:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29,
            "nodeType": "VariableDeclaration",
            "src": "1452:26:0",
            "constant": false,
            "documentation": {
              "id": 25,
              "nodeType": "StructuredDocumentation",
              "src": "1118:328:0",
              "text": " WARNING: Add the new storage fields just above this `__gap` field and decrement the `__gap` array size once per\n each new storage SLOT used. Per each storage slot used, not storage field!\n Read about storage gaps at https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps."
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1473:5:0",
            "scope": 30,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$100_storage",
              "typeString": "uint256[100]"
            },
            "typeName": {
              "baseType": {
                "id": 26,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1452:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 28,
              "length": {
                "hexValue": "313030",
                "id": 27,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1460:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "100"
              },
              "nodeType": "ArrayTypeName",
              "src": "1452:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$100_storage_ptr",
                "typeString": "uint256[100]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "BridgeManagerStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30
        ],
        "name": "BridgeManagerStorage",
        "nameLocation": "599:20:0",
        "scope": 321,
        "usedErrors": []
      },
      {
        "id": 320,
        "nodeType": "ContractDefinition",
        "src": "2059:5568:0",
        "nodes": [
          {
            "id": 43,
            "nodeType": "ErrorDefinition",
            "src": "2174:23:0",
            "errorSelector": "e6c4247b",
            "name": "InvalidAddress",
            "nameLocation": "2180:14:0",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2194:2:0"
            }
          },
          {
            "id": 45,
            "nodeType": "ErrorDefinition",
            "src": "2203:16:0",
            "errorSelector": "12a60184",
            "name": "OnlyUBI",
            "nameLocation": "2209:7:0",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2216:2:0"
            }
          },
          {
            "id": 47,
            "nodeType": "ErrorDefinition",
            "src": "2225:25:0",
            "errorSelector": "d21eab37",
            "name": "UnsupportedChain",
            "nameLocation": "2231:16:0",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2247:2:0"
            }
          },
          {
            "id": 49,
            "nodeType": "ErrorDefinition",
            "src": "2256:23:0",
            "errorSelector": "49f157c1",
            "name": "UnsupportedNft",
            "nameLocation": "2262:14:0",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2276:2:0"
            }
          },
          {
            "id": 59,
            "nodeType": "EventDefinition",
            "src": "2287:105:0",
            "anonymous": false,
            "eventSelector": "99a12365d01b3182185a1950375cefc84ea8c87a7a3a04bc0381dceb5a7a4db1",
            "name": "AmountBridged",
            "nameLocation": "2293:13:0",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "2323:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "2307:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2307:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "2347:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "2331:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2331:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2372:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "2356:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2356:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2386:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "2380:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2380:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2306:85:0"
            }
          },
          {
            "id": 65,
            "nodeType": "EventDefinition",
            "src": "2398:57:0",
            "anonymous": false,
            "eventSelector": "00f9c1721d242bc6035954ed38e035ecefc2f32d9f9725769bb556a7ee382057",
            "name": "BridgeSet",
            "nameLocation": "2404:9:0",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "2430:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "2414:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "2447:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "2439:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2439:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2413:41:0"
            }
          },
          {
            "id": 75,
            "nodeType": "EventDefinition",
            "src": "2461:104:0",
            "anonymous": false,
            "eventSelector": "3e4cc00ec1106ddaa5c2c3bb53737b56ccf85951e7dc2984be94d6a460fdc64d",
            "name": "FlowBridged",
            "nameLocation": "2467:11:0",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "2495:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "2479:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2479:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "2519:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "2503:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2503:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2544:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "2528:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2528:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2559:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "2553:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2553:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2478:86:0"
            }
          },
          {
            "id": 100,
            "nodeType": "FunctionDefinition",
            "src": "3060:212:0",
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "3185:87:0",
              "statements": [
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "3196:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 88,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "3209:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3196:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:24:0"
                },
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91,
                      "name": "UBI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "3231:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 92,
                      "name": "_UBI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "3237:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3231:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "3231:10:0"
                },
                {
                  "expression": {
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 95,
                      "name": "fUBI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "3252:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 96,
                      "name": "_fUBI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "3259:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3252:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "3252:12:0"
                }
              ]
            },
            "documentation": {
              "id": 76,
              "nodeType": "StructuredDocumentation",
              "src": "2573:481:0",
              "text": " @dev Contract initializer. For new `BridgeManager` versions replace `initializer` modifier by `reinitializer(v)`\n where `v` is the new version number of the contract. Read more about initializers at:\n https://blog.openzeppelin.com/the-state-of-smart-contract-upgrades/#implementation-contract-limitations\n @param _governance The governance address.\n @param _UBI The UBI ERC-20 address.\n @param _fUBI The fUBI ERC-721 address."
            },
            "functionSelector": "c0c53b8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 85,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 84,
                  "name": "initializer",
                  "nameLocations": [
                    "3173:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4170,
                  "src": "3173:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3173:11:0"
              }
            ],
            "name": "initialize",
            "nameLocation": "3069:10:0",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "_governance",
                  "nameLocation": "3098:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "3090:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3090:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_UBI",
                  "nameLocation": "3128:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "3120:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3120:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_fUBI",
                  "nameLocation": "3151:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "3143:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3143:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3079:84:0"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3185:0:0"
            },
            "scope": 320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 122,
            "nodeType": "FunctionDefinition",
            "src": "3522:176:0",
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "3600:98:0",
              "statements": [
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 110,
                        "name": "bridgeByChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3611:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "id": 111,
                        "name": "_chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "3627:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3611:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 113,
                      "name": "_bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "3639:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3611:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "3611:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 117,
                        "name": "_chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "3672:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 118,
                        "name": "_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "3682:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 116,
                      "name": "BridgeSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "3662:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3662:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "EmitStatement",
                  "src": "3657:33:0"
                }
              ]
            },
            "documentation": {
              "id": 101,
              "nodeType": "StructuredDocumentation",
              "src": "3280:236:0",
              "text": " @dev Sets the bridge for the given chain ID.\n @param _chainId The destination chain ID.\n @param _bridge The bridge implementation address for given chain ID. Set as zero address for unsupported chains."
            },
            "functionSelector": "2e0ca474",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 108,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 107,
                  "name": "onlyGovernance",
                  "nameLocations": [
                    "3585:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "3585:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3585:14:0"
              }
            ],
            "name": "setBridge",
            "nameLocation": "3531:9:0",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nameLocation": "3549:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "3541:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3541:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "_bridge",
                  "nameLocation": "3567:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "3559:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3559:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3540:35:0"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3600:0:0"
            },
            "scope": 320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 168,
            "nodeType": "FunctionDefinition",
            "src": "4068:395:0",
            "body": {
              "id": 167,
              "nodeType": "Block",
              "src": "4190:273:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 136,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4226:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4230:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4226:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 140,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4246:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BridgeManager_$320",
                              "typeString": "contract BridgeManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BridgeManager_$320",
                              "typeString": "contract BridgeManager"
                            }
                          ],
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4238:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4238:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4238:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 142,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "4253:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 133,
                            "name": "UBI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "4208:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 132,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5088,
                          "src": "4201:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$5088_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4201:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5088",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4213:12:0",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5087,
                      "src": "4201:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4201:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "4201:60:0"
                },
                {
                  "assignments": [
                    146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 146,
                      "mutability": "mutable",
                      "name": "bridge",
                      "nameLocation": "4280:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 167,
                      "src": "4272:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 145,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4272:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 150,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 148,
                        "name": "_chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "4318:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 147,
                      "name": "_getBridgeAddressIfSupported",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "4289:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4289:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4272:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 155,
                        "name": "_chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "4367:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 156,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "4377:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 157,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "4386:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 152,
                            "name": "bridge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "4346:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 151,
                          "name": "IBridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 343,
                          "src": "4338:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBridge_$343_$",
                            "typeString": "type(contract IBridge)"
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4338:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBridge_$343",
                          "typeString": "contract IBridge"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4354:12:0",
                      "memberName": "bridgeAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 332,
                      "src": "4338:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4338:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "4338:54:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 161,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "4422:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 162,
                        "name": "_chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "4430:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 163,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "4440:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 164,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "4449:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 160,
                      "name": "AmountBridged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "4408:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4408:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "EmitStatement",
                  "src": "4403:52:0"
                }
              ]
            },
            "documentation": {
              "id": 123,
              "nodeType": "StructuredDocumentation",
              "src": "3706:356:0",
              "text": " @dev Bridges an amount by routing the call to the corresponding bride implementation.\n @param _chainId The destination chain ID, specially in case same bridge can handle more than one.\n @param _amount The amount of tokens to bridge.\n @param _data Arbitrary data that might be required by the bridge implementation."
            },
            "functionSelector": "cf2febd0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bridgeAmount",
            "nameLocation": "4077:12:0",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nameLocation": "4108:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "4100:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4100:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4135:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "4127:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4127:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "4168:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "4153:20:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4153:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4089:91:0"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4190:0:0"
            },
            "scope": 320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 198,
            "nodeType": "FunctionDefinition",
            "src": "4829:252:0",
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "4950:131:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4988:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4992:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4988:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 186,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5008:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BridgeManager_$320",
                              "typeString": "contract BridgeManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BridgeManager_$320",
                              "typeString": "contract BridgeManager"
                            }
                          ],
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5000:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 184,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5000:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5000:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 188,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "5015:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 179,
                            "name": "fUBI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "4969:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 178,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5229,
                          "src": "4961:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$5229_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4961:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$5229",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4975:12:0",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5194,
                      "src": "4961:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4961:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "4961:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 192,
                        "name": "_chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "5047:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 193,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "5057:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 194,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "5067:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 191,
                      "name": "_bridgeFlow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
                      "src": "5035:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5035:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "5035:38:0"
                }
              ]
            },
            "documentation": {
              "id": 169,
              "nodeType": "StructuredDocumentation",
              "src": "4471:352:0",
              "text": " @dev Bridges a flow by routing the call to the corresponding bride implementation.\n @param _chainId The destination chain ID, specially in case same bridge can handle more than one.\n @param _tokenId The token ID of the flow NFT.\n @param _data arbitrary data that might be required by the bridge implementation."
            },
            "functionSelector": "d80dc6d0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bridgeFlow",
            "nameLocation": "4838:10:0",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nameLocation": "4867:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "4859:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4859:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4894:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "4886:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4886:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "4928:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "4913:20:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4913:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4848:92:0"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4950:0:0"
            },
            "scope": 320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 248,
            "nodeType": "FunctionDefinition",
            "src": "5463:496:0",
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "5649:310:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 213,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5664:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5668:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5664:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 215,
                      "name": "fUBI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "5678:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5664:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 241,
                    "nodeType": "Block",
                    "src": "5854:50:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 238,
                            "name": "UnsupportedNft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "5876:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5876:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 240,
                        "nodeType": "RevertStatement",
                        "src": "5869:23:0"
                      }
                    ]
                  },
                  "id": 242,
                  "nodeType": "IfStatement",
                  "src": "5660:244:0",
                  "trueBody": {
                    "id": 237,
                    "nodeType": "Block",
                    "src": "5684:164:0",
                    "statements": [
                      {
                        "assignments": [
                          218,
                          220
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 218,
                            "mutability": "mutable",
                            "name": "chainId",
                            "nameLocation": "5708:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 237,
                            "src": "5700:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 217,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5700:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 220,
                            "mutability": "mutable",
                            "name": "bridgeData",
                            "nameLocation": "5730:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 237,
                            "src": "5717:23:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 219,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5717:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 230,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 223,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 207,
                              "src": "5755:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5763:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 224,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5763:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5772:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 226,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5772:5:0",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 228,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5762:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                                "typeString": "tuple(type(uint256),type(bytes storage pointer))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                                "typeString": "tuple(type(uint256),type(bytes storage pointer))"
                              }
                            ],
                            "expression": {
                              "id": 221,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5744:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5748:6:0",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5744:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5744:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(uint256,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5699:80:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 232,
                              "name": "chainId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "5806:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 233,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 205,
                              "src": "5815:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 234,
                              "name": "bridgeData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 220,
                              "src": "5825:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 231,
                            "name": "_bridgeFlow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "5794:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,bytes memory)"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5794:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 236,
                        "nodeType": "ExpressionStatement",
                        "src": "5794:42:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 243,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "5921:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BridgeManager_$320",
                          "typeString": "contract BridgeManager"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5926:16:0",
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 248,
                      "src": "5921:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "5943:8:0",
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "5921:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 212,
                  "id": 246,
                  "nodeType": "Return",
                  "src": "5914:37:0"
                }
              ]
            },
            "baseFunctions": [
              5246
            ],
            "documentation": {
              "id": 199,
              "nodeType": "StructuredDocumentation",
              "src": "5089:368:0",
              "text": " @dev Hook used to enable ERC-721 token bridging through transfers to this contract.\n @param _tokenId The ID of the bridged ERC-721 token.\n @param _data Arbitrary data passed by the user. It should first contain the chain ID encoded, followed by any\n arbitrary data that might be required by the expected bridge implementation."
            },
            "functionSelector": "150b7a02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "5472:16:0",
            "overrides": {
              "id": 209,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5623:8:0"
            },
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5499:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5499:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5532:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5532:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5569:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5561:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5561:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5603:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5588:20:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5588:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5488:127:0"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5641:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5641:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5640:8:0"
            },
            "scope": 320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 281,
            "nodeType": "FunctionDefinition",
            "src": "6469:320:0",
            "body": {
              "id": 280,
              "nodeType": "Block",
              "src": "6589:200:0",
              "statements": [
                {
                  "assignments": [
                    259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 259,
                      "mutability": "mutable",
                      "name": "bridge",
                      "nameLocation": "6608:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 280,
                      "src": "6600:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 258,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6600:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 263,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 261,
                        "name": "_chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "6646:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 260,
                      "name": "_getBridgeAddressIfSupported",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "6617:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6617:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6600:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 268,
                        "name": "_chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "6693:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 269,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "6703:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 270,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "6713:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 265,
                            "name": "bridge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 259,
                            "src": "6674:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 264,
                          "name": "IBridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 343,
                          "src": "6666:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBridge_$343_$",
                            "typeString": "type(contract IBridge)"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6666:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBridge_$343",
                          "typeString": "contract IBridge"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6682:10:0",
                      "memberName": "bridgeFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 342,
                      "src": "6666:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6666:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "6666:53:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 274,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "6747:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 275,
                        "name": "_chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "6755:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 276,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "6765:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 277,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "6775:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 273,
                      "name": "FlowBridged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "6735:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6735:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "EmitStatement",
                  "src": "6730:51:0"
                }
              ]
            },
            "documentation": {
              "id": 249,
              "nodeType": "StructuredDocumentation",
              "src": "5967:496:0",
              "text": " @dev Bridges a flow by routing the call to the corresponding bride implementation. Reverts if the given chain\n ID is not currently supported. Emits a `FlowBridged` event. Internal function to abstract bridge flow logic.\n @param _chainId The destination chain ID, specially in case same bridge can handle more than one.\n @param _tokenId The token ID of the flow NFT.\n @param _data Arbitrary data that might be required by the bridge implementation."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_bridgeFlow",
            "nameLocation": "6478:11:0",
            "parameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nameLocation": "6508:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "6500:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6500:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6535:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "6527:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6527:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6567:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "6554:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6554:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6489:90:0"
            },
            "returnParameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6589:0:0"
            },
            "scope": 320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 309,
            "nodeType": "FunctionDefinition",
            "src": "7059:261:0",
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "7147:173:0",
              "statements": [
                {
                  "assignments": [
                    290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 290,
                      "mutability": "mutable",
                      "name": "bridge",
                      "nameLocation": "7166:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "7158:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 289,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7158:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 294,
                  "initialValue": {
                    "baseExpression": {
                      "id": 291,
                      "name": "bridgeByChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "7175:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 293,
                    "indexExpression": {
                      "id": 292,
                      "name": "_chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "7191:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7175:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7158:42:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 295,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "7215:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7233:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7225:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7225:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7225:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7215:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 305,
                  "nodeType": "IfStatement",
                  "src": "7211:78:0",
                  "trueBody": {
                    "id": 304,
                    "nodeType": "Block",
                    "src": "7237:52:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 301,
                            "name": "UnsupportedChain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "7259:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7259:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 303,
                        "nodeType": "RevertStatement",
                        "src": "7252:25:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 306,
                    "name": "bridge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 290,
                    "src": "7306:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 288,
                  "id": 307,
                  "nodeType": "Return",
                  "src": "7299:13:0"
                }
              ]
            },
            "documentation": {
              "id": 282,
              "nodeType": "StructuredDocumentation",
              "src": "6797:256:0",
              "text": " @dev Gets the bridge implementation address for the given chain ID, reverts in case of unsupported chain.\n @param _chainId The ID of the destination chain for the bridge.\n @return The address of the bridge implementation."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getBridgeAddressIfSupported",
            "nameLocation": "7068:28:0",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "_chainId",
                  "nameLocation": "7105:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "7097:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7097:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7096:18:0"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "7138:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7138:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7137:9:0"
            },
            "scope": 320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 319,
            "nodeType": "FunctionDefinition",
            "src": "7534:90:0",
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "7622:2:0",
              "statements": []
            },
            "baseFunctions": [
              4383
            ],
            "documentation": {
              "id": 310,
              "nodeType": "StructuredDocumentation",
              "src": "7328:200:0",
              "text": " @dev Overrides the `_authorizeUpgrade` hook from `UUPSUpgradeable` adding the `onlyGovernance` modifier.\n @param _newImplementation The new contract implementation address."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 316,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 315,
                  "name": "onlyGovernance",
                  "nameLocations": [
                    "7607:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "7607:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7607:14:0"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "7543:17:0",
            "overrides": {
              "id": 314,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7598:8:0"
            },
            "parameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 312,
                  "mutability": "mutable",
                  "name": "_newImplementation",
                  "nameLocation": "7569:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "7561:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7561:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7560:28:0"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7622:0:0"
            },
            "scope": 320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32,
              "name": "IERC721Receiver",
              "nameLocations": [
                "2085:15:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5247,
              "src": "2085:15:0"
            },
            "id": 33,
            "nodeType": "InheritanceSpecifier",
            "src": "2085:15:0"
          },
          {
            "baseName": {
              "id": 34,
              "name": "Initializable",
              "nameLocations": [
                "2102:13:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4268,
              "src": "2102:13:0"
            },
            "id": 35,
            "nodeType": "InheritanceSpecifier",
            "src": "2102:13:0"
          },
          {
            "baseName": {
              "id": 36,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "2117:15:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4384,
              "src": "2117:15:0"
            },
            "id": 37,
            "nodeType": "InheritanceSpecifier",
            "src": "2117:15:0"
          },
          {
            "baseName": {
              "id": 38,
              "name": "Governable",
              "nameLocations": [
                "2134:10:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1294,
              "src": "2134:10:0"
            },
            "id": 39,
            "nodeType": "InheritanceSpecifier",
            "src": "2134:10:0"
          },
          {
            "baseName": {
              "id": 40,
              "name": "BridgeManagerStorage",
              "nameLocations": [
                "2146:20:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30,
              "src": "2146:20:0"
            },
            "id": 41,
            "nodeType": "InheritanceSpecifier",
            "src": "2146:20:0"
          }
        ],
        "canonicalName": "BridgeManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 31,
          "nodeType": "StructuredDocumentation",
          "src": "1486:571:0",
          "text": " WARNING: If you add inheritance from contracts that have storage fields, make sure you do not brake storage layout\n compatibility. Always add new inheritance appending them at the end of current ones and do not re-order them.\n Add new non-inherited storage at `BridgeManagerStorage` following the rules documented there.\n Read about storage layout compatibility at https://blog.openzeppelin.com/the-state-of-smart-contract-upgrades/\n and also at https://docs.openzeppelin.com/upgrades-plugins/1.x/writing-upgradeable#modifying-your-contracts."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          320,
          30,
          1294,
          4384,
          4116,
          3798,
          4268,
          5247
        ],
        "name": "BridgeManager",
        "nameLocation": "2068:13:0",
        "scope": 321,
        "usedErrors": [
          43,
          45,
          47,
          49,
          1259
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 0
}